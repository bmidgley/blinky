// Generated by CoffeeScript 1.12.3
(function() {
  var Cylon, SerialPort, port, ports, randomColor, randomNumber, shake, stop;

  Cylon = require('cylon');

  SerialPort = require('serialport');

  ports = ['/dev/rfcomm0'];

  port = new SerialPort(ports[0]);

  randomNumber = function(max) {
    if (max < 0) {
      return 0;
    } else {
      return max * Math.random();
    }
  };

  randomColor = function() {
    var b, g, r, total;
    total = 255;
    r = randomNumber(total);
    g = randomNumber(total - r);
    b = randomNumber(total - r - g);
    return r << 16 | g << 8 | b;
  };

  stop = function(my) {
    return my.setRawMotors({
      lmode: 0,
      rmode: 0
    });
  };

  shake = function(my) {
    my.setRawMotors({
      lmode: 1,
      lpower: 250,
      rmode: 1,
      rpower: 250
    });
    return setTimeout((function() {
      return stop(my);
    }), 2000);
  };

  Cylon.robot({
    connections: {
      sphero: {
        adaptor: 'sphero',
        port: ports[0]
      }
    },
    devices: {
      sphero: {
        driver: 'sphero'
      }
    },
    work: function(my) {
      var clock;
      clock = new Date;
      every(5..second(), function() {
        var color;
        color = randomColor();
        my.sphero.color(color);
        return my.sphero.roll(60, Math.floor(360 * Math.random()));
      });
      my.sphero.on('collisions', function(data) {
        console.log('collision', clock, data);
        return clock = new Date;
      });
      my.sphero.detectCollisions();
      my.sphero.setStabilization(false);
      return my.sphero.setRawMotors({
        lmode: 1,
        lpower: 250,
        rmode: 1,
        rpower: 250
      });
    }
  });

  port.on('open', function() {
    console.log('connection opened');
    return Cylon.start();
  });

}).call(this);
